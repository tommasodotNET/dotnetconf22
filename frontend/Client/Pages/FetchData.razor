@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the city microservice.</p>

<p>
	<div class="input-group mb-3">
		<input class="form-control" @bind="apiKey" placeholder="API Key" />
		<button class="btn btn-success" @onclick="CallApiAsync">Call API</button>
	</div>
</p>

@if (forecasts == null)
{
	<p><em>Set the API Key and click Call API!</em></p>
}
else
{
	foreach (var city in forecasts)
	{
		<h3>@city.City</h3>
		<table class="table">
			<thead>
				<tr>
					<th>Date</th>
					<th>Temp. (C)</th>
					<th>Summary</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var forecast in city.Weather)
				{
					<tr>
						<td>@forecast.Date.ToShortDateString()</td>
						<td>@forecast.TemperatureC</td>
						<td>@forecast.Summary</td>
					</tr>
				}
			</tbody>
		</table>
	}
}

@code {
	private string? apiKey;

	private CityWeather[]? forecasts;

	protected async Task CallApiAsync()
	{
		try
		{
			Http.DefaultRequestHeaders.Clear();
			Http.DefaultRequestHeaders.Add("Ocp-Apim-Subscription-Key", apiKey);
			forecasts = await Http.GetFromJsonAsync<CityWeather[]>("city-api/cities");
		}
		catch(Exception ex)
		{
			Console.WriteLine(ex.Message);
			forecasts = null;
		}

		StateHasChanged();
	}

	public class CityWeather
	{
		[JsonProperty("city")]
		public string? City { get; set; }

		[JsonProperty("weather")]
		public List<WeatherForecast>? Weather { get; set; }
	}

	public class WeatherForecast
	{
		[JsonProperty("date")]
		public DateTime Date { get; set; }

		[JsonProperty("temperatureC")]
		public int TemperatureC { get; set; }

		[JsonProperty("summary")]
		public string? Summary { get; set; }
	}
}
